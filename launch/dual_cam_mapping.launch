<!--
     This launch file provides an example of how to use ekf as nodelet or as node in one launch file.
     By providing arguments like "use_nodelets this launch file will start a nodelet instead of a node.
     This is very usefull in experimental setup to allow easy switch between nodelets and node.
     Also it allows you to specify the manager the nodelet should run in.
-->

<launch>
	<arg name="device_type_camera1"    		default="t265"/>
  <arg name="device_type_camera2"    		default="d435"/>		<!-- Note: using regular expression. match D435, D435i, D415... -->
  <arg name="serial_no_camera1"    			default=""/>
  <arg name="serial_no_camera2"    			default=""/>
  <arg name="camera1"              			default="t265"/>
  <arg name="camera2"              			default="d435"/>
  <arg name="tf_prefix_camera1"         default="$(arg camera1)"/>
  <arg name="tf_prefix_camera2"         default="$(arg camera2)"/>
  <arg name="initial_reset"             default="false"/>
  <arg name="enable_fisheye_camera1"    default="false"/>
  <arg name="enable_fisheye_camera2"    default="true"/>
  <arg name="color_width"               default="640"/>
  <arg name="color_height"              default="480"/>
  <arg name="depth_width"               default="640"/>
  <arg name="depth_height"              default="480"/>
  <arg name="clip_distance"             default="-2"/>
  <arg name="topic_odom_in"             default="odom_in"/>
  <arg name="calib_odom_file"           default=""/>


  <arg name="usb_port_id"         default=""/>
  <arg name="json_file_path"      default=""/>
  <arg name="external_manager"    default="false"/>
  <arg name="manager"             default="realsense2_camera_manager"/>

  <arg name="fisheye_width"       default="640"/>
  <arg name="fisheye_height"      default="480"/>

  <arg name="enable_depth"        default="true"/>

  <arg name="infra_width"        default="640"/>
  <arg name="infra_height"       default="480"/>
  <arg name="enable_infra1"       default="true"/>
  <arg name="enable_infra2"       default="true"/>

  <arg name="enable_color"        default="true"/>

  <arg name="fisheye_fps"         default="30"/>
  <arg name="depth_fps"           default="30"/>
  <arg name="infra_fps"           default="30"/>
  <arg name="color_fps"           default="30"/>
  <arg name="gyro_fps"            default="400"/>
  <arg name="accel_fps"           default="250"/>
  <arg name="enable_gyro"         default="true"/>
  <arg name="enable_accel"        default="true"/>

  <arg name="enable_pointcloud"         default="true"/>
  <arg name="pointcloud_texture_stream" default="RS2_STREAM_COLOR"/>
  <arg name="pointcloud_texture_index"  default="0"/>

  <arg name="enable_sync"               default="true"/>
  <arg name="align_depth" 							default="true"/>

  <arg name="publish_tf"                default="true"/>
  <arg name="tf_publish_rate"           default="0"/>

  <arg name="filters"                   default=""/>
  <arg name="linear_accel_cov" 					default="1.0"/>
  <arg name="unite_imu_method"          default="linear_interpolation"/>
  <arg name="publish_odom_tf_camera1"   default="true"/>
  <arg name="publish_odom_tf_camera2"   default="true"/>
  <arg name="allow_no_texture_points"   default="false"/>

  <group ns="$(arg camera1)">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="device_type"           value="$(arg device_type_camera1)"/>
      <arg name="serial_no"             value="$(arg serial_no_camera1)"/>
      <arg name="tf_prefix"         		value="$(arg tf_prefix_camera1)"/>
      <arg name="initial_reset"         value="$(arg initial_reset)"/>
      <arg name="enable_fisheye1"       value="$(arg enable_fisheye_camera1)"/>
      <arg name="enable_fisheye2"       value="$(arg enable_fisheye_camera1)"/>
      <arg name="topic_odom_in"         value="$(arg topic_odom_in)"/>
      <arg name="calib_odom_file"       value="$(arg calib_odom_file)"/>
      <arg name="publish_odom_tf"       value="$(arg publish_odom_tf_camera1)"/>
    </include>
  </group>

  <group ns="$(arg camera2)">
    <include file="$(find realsense2_camera)/launch/includes/nodelet.launch.xml">
      <arg name="device_type"           		value="$(arg device_type_camera2)"/>
      <arg name="serial_no"             		value="$(arg serial_no_camera2)"/>
      <arg name="tf_prefix"                	value="$(arg tf_prefix_camera2)"/>
      <arg name="external_manager"         	value="$(arg external_manager)"/>
      <arg name="manager"                  	value="$(arg manager)"/>
      <arg name="usb_port_id"              	value="$(arg usb_port_id)"/>
      <arg name="json_file_path"           	value="$(arg json_file_path)"/>

      <arg name="enable_pointcloud"        value="$(arg enable_pointcloud)"/>
      <arg name="pointcloud_texture_stream" value="$(arg pointcloud_texture_stream)"/>
      <arg name="pointcloud_texture_index"  value="$(arg pointcloud_texture_index)"/>
      <arg name="enable_sync"              value="$(arg enable_sync)"/>
      <arg name="align_depth"              value="$(arg align_depth)"/>

      <arg name="fisheye_width"            value="$(arg fisheye_width)"/>
      <arg name="fisheye_height"           value="$(arg fisheye_height)"/>
      <arg name="enable_fisheye1"           value="$(arg enable_fisheye_camera2)"/>
      <arg name="enable_fisheye2"           value="$(arg enable_fisheye_camera2)"/>

      <arg name="depth_width"              value="$(arg depth_width)"/>
      <arg name="depth_height"             value="$(arg depth_height)"/>
      <arg name="enable_depth"             value="$(arg enable_depth)"/>

      <arg name="color_width"              value="$(arg color_width)"/>
      <arg name="color_height"             value="$(arg color_height)"/>
      <arg name="enable_color"             value="$(arg enable_color)"/>

      <arg name="infra_width"              value="$(arg infra_width)"/>
      <arg name="infra_height"             value="$(arg infra_height)"/>
      <arg name="enable_infra1"            value="$(arg enable_infra1)"/>
      <arg name="enable_infra2"            value="$(arg enable_infra2)"/>

      <arg name="fisheye_fps"              value="$(arg fisheye_fps)"/>
      <arg name="depth_fps"                value="$(arg depth_fps)"/>
      <arg name="infra_fps"                value="$(arg infra_fps)"/>
      <arg name="color_fps"                value="$(arg color_fps)"/>
      <arg name="gyro_fps"                 value="$(arg gyro_fps)"/>
      <arg name="accel_fps"                value="$(arg accel_fps)"/>
      <arg name="enable_gyro"              value="$(arg enable_gyro)"/>
      <arg name="enable_accel"             value="$(arg enable_accel)"/>

      <arg name="publish_tf"               value="$(arg publish_tf)"/>
      <arg name="tf_publish_rate"          value="$(arg tf_publish_rate)"/>

      <arg name="filters"                  value="$(arg filters)"/>
      <arg name="clip_distance"            value="$(arg clip_distance)"/>
      <arg name="linear_accel_cov"         value="$(arg linear_accel_cov)"/>
      <arg name="initial_reset"            value="$(arg initial_reset)"/>
      <arg name="unite_imu_method"         value="$(arg unite_imu_method)"/>
      <arg name="topic_odom_in"            value="$(arg topic_odom_in)"/>
      <arg name="calib_odom_file"          value="$(arg calib_odom_file)"/>
      <arg name="publish_odom_tf"          value="$(arg publish_odom_tf_camera2)"/>
      <arg name="allow_no_texture_points"  value="$(arg allow_no_texture_points)"/>
    </include>
  </group>

    
     <node pkg="imu_filter_madgwick" type="imu_filter_node" name="ImuFilter">
         <param name="use_mag" type="bool" value="false" />
         <param name="_publish_tf" type="bool" value="false" />
         <param name="_world_frame" type="string" value="enu" />
         <remap from="/imu/data_raw" to="/camera/imu"/>
     </node>

    <include file="$(find rtabmap_ros)/launch/rtabmap.launch">
        <arg name="args" value="--delete_db_on_start"/>

				<arg name="frame_id"                		value="base_link"/>     <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they are published -->
  			<arg name="odom_frame_id"           		value=""/>                <!-- If set, TF is used to get odometry instead of the topic -->
			  <arg name="map_frame_id"            		value="map"/>
<!--			  <arg name="ground_truth_frame_id"   		value="map"/>      e.g., "world" -->
<!--			  <arg name="ground_truth_base_frame_id" 	value=""/>   e.g., "tracker", a fake frame matching the frame "frame_id" (but on different TF tree) -->
			  <arg name="namespace"               		value="rtabmap"/>
			  <arg name="database_path"           		value="~/.ros/rtabmap.db"/>
			  <arg name="queue_size"              		value="10"/>
			  <arg name="wait_for_transform"      		value="0.2"/>
			  <arg name="launch_prefix"           		value=""/>              <!-- for debugging purpose, it fills launch-prefix tag of the nodes -->
			  <arg name="output"                  		value="log"/>        <!-- Control node output (screen or log) -->
			  <arg name="publish_tf_map"          		value="true"/>

  			<arg name="odom_sensor_sync"        		value="true"/>
  			<arg name="odom_guess_frame_id"     		value="t265_odom_frame"/>
        <arg name="odom_topic" 									value="odom"/>
        <arg name="rgb_topic" 									value="/d435/color/image_raw"/>
        <arg name="depth_topic" 								value="/d435/aligned_depth_to_color/image_raw"/>
        <arg name="camera_info_topic" 					value="/d435/color/camera_info"/>
        <arg name="depth_camera_info_topic" 		value="/d435/depth/camera_info"/>
        <arg name="rtabmapviz" 									value="false"/>
        <arg name="rviz" 												value="true"/>
    </include>

  <node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0 0 0 0 0 0 /base_link /camera_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="camera_link_to_d435" args="0 0 0 0 0 0 /camera_link /d435_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="odom_to_t265_odom" args="0 0 0 0 0 0 /odom /t265_odom_frame 100"/>
  <node pkg="tf" type="static_transform_publisher" name="t265_pose_to_base_link" args="0 0 0 0 0 0 /t265_pose_frame /base_link 100"/>


	<!--  alternative static tfs
  <node pkg="tf" type="static_transform_publisher" name="odom_to_base" args="0 0 0 0 0 0 /odom /base_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0 0 0 0 0 0 /base_link /camera_link 100"/>
  <node pkg="tf" type="static_transform_publisher" name="camera_link_to_d435" args="0 0 0 0 0 0 /camera_link /t265_odom_frame 100"/>
  <node pkg="tf" type="static_transform_publisher" name="t265_pose_to_base_link" args="0 0 0 0 0 0 /t265_pose_frame /d435_link 100"/>
    -->

	<!--  Placeholder
  <node pkg="tf2_ros" type="static_transform_publisher" name="bl_imu" args="0 0 0 1.5708 0 3.1416 base_link imu" />   
    -->

</launch>
